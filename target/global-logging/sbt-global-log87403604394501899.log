[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.9 (Oracle Corporation Java 20.0.2)
[debug] Load.defaultLoad until apply took 158.5313ms
[debug]                 Load.loadUnit: plugins took 99.932ms
[debug]                 Load.loadUnit: defsScala took 0.247ms
[debug] [Loading] Scanning directory C:\Users\Filip\Documents\MEGA\Scala\projekt\project\project
[debug]                   Load.loadUnit: mkEval took 5.2638ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Filip\Documents\MEGA\Scala\projekt\project\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 17.5711 ms
[info] loading settings for project projekt-build-build from metals.sbt ...
[debug]                     Load.resolveProject(projekt-build-build) took 38.4639ms
[debug]                   Load.loadTransitive: finalizeProject(Project(id projekt-build-build, base: C:\Users\Filip\Documents\MEGA\Scala\projekt\project\project, plugins: List(<none>))) took 77.6289ms
[debug] [Loading] Done in C:\Users\Filip\Documents\MEGA\Scala\projekt\project\project, returning: (projekt-build-build)
[debug]                 Load.loadUnit: loadedProjectsRaw took 446.1875ms
[debug]                 Load.loadUnit: cleanEvalClasses took 8.4108ms
[debug]               Load.loadUnit(file:/C:/Users/Filip/Documents/MEGA/Scala/projekt/project/project/, ...) took 560.8641ms
[debug]             Load.apply: load took 844.8509ms
[debug]             Load.apply: resolveProjects took 4.9102ms
[debug]             Load.apply: finalTransforms took 58.863ms
[debug]             Load.apply: config.delegates took 6.081ms
[debug]             Load.apply: Def.make(settings)... took 347.0095ms
[debug]             Load.apply: structureIndex took 101.4035ms
[debug]             Load.apply: mkStreams took 1.6457ms
[info] loading project definition from C:\Users\Filip\Documents\MEGA\Scala\projekt\project\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
